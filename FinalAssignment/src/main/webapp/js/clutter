	interval = setInterval(function() {
		// Replace the below code with your actual stock data API
		if (ws != null) {
			ws.close();
		}

		// create the websocket
		ws = new WebSocket("http://localhost:8080/FinalAssignment-1.0-SNAPSHOT/ws/stocks");

		ws.onmessage = function (event) {
			console.log(event.data);
			// parsing the server's message as json
			let message = JSON.parse(event.data);
			document.getElementById("log").value += "(" + timestamp() + ") " + message.message + "\n";
		}

		var stockPrice = Math.floor(Math.random() * 100) + 1;
		var time = new Date().toLocaleTimeString();
		chart.data.labels.push(time);
		chart.data.datasets[0].data.push(stockPrice);
		if (chart.data.labels.length > 10) {
			chart.data.labels.shift();
			chart.data.datasets[0].data.shift();
		}
		chart.update();
	}, 100);
}

var socket = new WebSocket("ws://localhost:8080/FinalAssignment-1.0-SNAPSHOT/ws/stocks");
    socket.onmessage = function(event) {
        var stockData = JSON.parse(event.data);
        var stockPrice = stockData.price;
        var time = new Date(stockData.time).toLocaleTimeString();
        chart.data.labels.push(time);
        chart.data.datasets[0].data.push(stockPrice);
        if (chart.data.labels.length > 10) {
            chart.data.labels.shift();
            chart.data.datasets[0].data.shift();
        }
        chart.update();
    };

        interval = setInterval(function() {
            socket.send("request");
        }, 5000);



/* {
        "symbol": "AAPL",
        "quantity": 145.63,
    }
	*/
function lockIn() {
	// Get the table and rows
	const table = document.getElementById("Order");
	const rows = table.getElementsByTagName("tr");

	// Create an array to store the data
	const quantities = [];

	// Loop through the rows and extract the data
	for (let i = 1; i < rows.length - 1; i++) { // skip header row and footer row
		const row = rows[i];
		const symbol = row.getElementsByTagName("td")[0].textContent;
		const buyQuant = parseFloat(row.getElementsByTagName("td")[1].querySelector("input").value);
		const sellQuant = parseFloat(row.getElementsByTagName("td")[2].querySelector("input").value);
		const totalQuant = sellQuant - buyQuant

		quantities.push({
		symbol: symbol,
		quantity: totalQuant
		});
	}

	// Create a JSON object with the form data
	const data = {
		quantities: quantities
	};

